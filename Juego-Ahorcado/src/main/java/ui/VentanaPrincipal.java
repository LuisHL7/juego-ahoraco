package ui;

import model.Ahorcado;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.Objects;

/**
 *
 * @author Luis Huapaya
 */
public class VentanaPrincipal extends javax.swing.JFrame {
    String palabra = null;
    private Ahorcado ahorcado;
    ArrayList<JLabel> etiquetasAhorcado;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        this.etiquetasAhorcado = new ArrayList<>();
        this.etiquetasAhorcado.add(etiquetaImagen0);
        this.etiquetasAhorcado.add(etiquetaImagen1);
        this.etiquetasAhorcado.add(etiquetaImagen2);
        this.etiquetasAhorcado.add(etiquetaImagen3);
        this.etiquetasAhorcado.add(etiquetaImagen4);
        this.etiquetasAhorcado.add(etiquetaImagen5);
        this.etiquetasAhorcado.add(etiquetaImagen6);
        initComponents();
        setLocationRelativeTo(null);
        btnProbar.setEnabled(false);
        campoLetra.setEnabled(false);

    }

    /**
     * Cambia el icono de la imagen.
     *
     * @return la imagen
     */
    @Override
    public Image getIconImage() {
        return Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Hangman-6.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelTitulo = new javax.swing.JPanel();
        etiquetaTitulo = new JLabel();
        panelBotones = new javax.swing.JPanel();
        btnNuevaPartida = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        panelJuego = new javax.swing.JPanel();
        etiqueta1 = new JLabel();
        etiquetaPalabraOculta = new JLabel();
        etiqueta2 = new JLabel();
        etiquetaLetrasFalladas = new JLabel();
        etiqueta5 = new JLabel();
        campoLetra = new javax.swing.JTextField();
        btnProbar = new javax.swing.JButton();
        panelImagen = new javax.swing.JPanel();
        etiquetaImagen0 = new JLabel(new ImageIcon());
        etiquetaImagen1 = new JLabel(new ImageIcon());
        etiquetaImagen2 = new JLabel(new ImageIcon());
        etiquetaImagen3 = new JLabel(new ImageIcon());
        etiquetaImagen4 = new JLabel(new ImageIcon());
        etiquetaImagen5 = new JLabel(new ImageIcon());
        etiquetaImagen6 = new JLabel(new ImageIcon());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("El Ahorcado");
        setIconImage(getIconImage());

        etiquetaTitulo.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        etiquetaTitulo.setText("El juego del Ahorcado");
        panelTitulo.add(etiquetaTitulo);

        getContentPane().add(panelTitulo, java.awt.BorderLayout.PAGE_START);

        btnNuevaPartida.setText("Nueva partida");
        btnNuevaPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaPartidaActionPerformed(evt);
            }
        });
        panelBotones.add(btnNuevaPartida);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        panelBotones.add(btnSalir);

        getContentPane().add(panelBotones, java.awt.BorderLayout.PAGE_END);

        panelJuego.setLayout(new java.awt.GridBagLayout());

        etiqueta1.setText("Palabra a adivinar: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(147, 6, 0, 0);
        panelJuego.add(etiqueta1, gridBagConstraints);

        etiquetaPalabraOculta.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        etiquetaPalabraOculta.setText("- - - - - -");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(150, 23, 0, 0);
        panelJuego.add(etiquetaPalabraOculta, gridBagConstraints);

        etiqueta2.setText("Letras falladas: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        panelJuego.add(etiqueta2, gridBagConstraints);

        etiquetaLetrasFalladas.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 32;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        panelJuego.add(etiquetaLetrasFalladas, gridBagConstraints);

        etiqueta5.setText("Introduce una letra: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 6, 0, 0);
        panelJuego.add(etiqueta5, gridBagConstraints);

        campoLetra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoLetraKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 1, 0, 0);
        panelJuego.add(campoLetra, gridBagConstraints);

        btnProbar.setText("Probar");
        btnProbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProbarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = -2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 114, 0);
        panelJuego.add(btnProbar, gridBagConstraints);

        getContentPane().add(panelJuego, java.awt.BorderLayout.LINE_START);

        panelImagen.setLayout(new java.awt.CardLayout());

        etiquetaImagen0.setIcon(new ImageIcon(Objects.requireNonNull(getClass().getResource("/Hangman-0.png")))); // NOI18N
        panelImagen.add(etiquetaImagen0, "card2");

        etiquetaImagen1.setIcon(new ImageIcon(Objects.requireNonNull(getClass().getResource("/Hangman-1.png")))); // NOI18N
        panelImagen.add(etiquetaImagen1, "card3");

        etiquetaImagen2.setIcon(new ImageIcon(Objects.requireNonNull(getClass().getResource("/Hangman-2.png")))); // NOI18N
        panelImagen.add(etiquetaImagen2, "card4");

        etiquetaImagen3.setIcon(new ImageIcon(Objects.requireNonNull(getClass().getResource("/Hangman-3.png")))); // NOI18N
        panelImagen.add(etiquetaImagen3, "card4");

        etiquetaImagen4.setIcon(new ImageIcon(Objects.requireNonNull(getClass().getResource("/Hangman-4.png")))); // NOI18N
        panelImagen.add(etiquetaImagen4, "card4");

        etiquetaImagen5.setIcon(new ImageIcon(Objects.requireNonNull(getClass().getResource("/Hangman-5.png")))); // NOI18N
        panelImagen.add(etiquetaImagen5, "card4");

        etiquetaImagen6.setIcon(new ImageIcon(Objects.requireNonNull(getClass().getResource("/Hangman-6.png")))); // NOI18N
        panelImagen.add(etiquetaImagen6, "card4");


        getContentPane().add(panelImagen, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Cierra la ventana al pulsar el bot√≥n salir.
     *
     * @param evt
     */
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);
        this.dispose();
    }

    /**
     * Genera una ventana con las opciones de juego a escoger. Guarda la
     * palabra.
     *
     * @param evt
     */
    private void btnNuevaPartidaActionPerformed(java.awt.event.ActionEvent evt) {
        etiquetaImagen0.setVisible(true);
        etiquetaImagen1.setVisible(false);
        etiquetaImagen2.setVisible(false);
        etiquetaImagen3.setVisible(false);
        etiquetaImagen4.setVisible(false);
        etiquetaImagen5.setVisible(false);
        etiquetaImagen6.setVisible(false);


        String[] opciones = {"Un jugador, generando a palabra al azar.",
                "Dos jugadores, uno introduciendo  la palabra oculta.",
                "Un jugador, generando una palabra al azar desde un fichero."};

        Object opcion = JOptionPane.showInputDialog(null, "Selecciona un modo de juego",
                "Modo de juego", JOptionPane.QUESTION_MESSAGE, null,
                new Object[]{opciones[0], opciones[1], opciones[2]}, "Escoge una opci√≥n.");

        if (opcion == opciones[1]) {
            GeneradorPalabra generadorPalabra = new GeneradorPalabraTeclado();
            try {
                do {
                    palabra = generadorPalabra.generarPalabra(); // palabra introducida poe el usuario.
                    if (palabra.isEmpty() || !palabra.toUpperCase().matches("[A-Z√Å√â√ç√ì√ö√ú√ë\\s]*")) {
                        JOptionPane.showMessageDialog(this, "Escribiste alg√∫n caracter no v√°lido.", "Erro", JOptionPane.WARNING_MESSAGE);
                    }
                } while (palabra.isEmpty() || !palabra.toUpperCase().matches("[A-Z√Å√â√ç√ì√ö√ú√ë\\s]*"));
            } catch (GenerarPalabraException ex) {
                System.out.println("Error generando la palabra que se ingres√≥.");
            }
        } else if (opcion == opciones[0]) {
            GeneradorPalabra generadorPalabra = new GeneradorArrayPalabras();
            try {
                palabra = generadorPalabra.generarPalabra(); // palabra elegida por el programa.
            } catch (GenerarPalabraException ex) {
                System.out.println("Erro generando la palabra del array");
            }
        } else if (opcion == opciones[2]) {
            GeneradorPalabra GeneradorPalabra = new GeneradorPalabraFichero();
            try {
                palabra = GeneradorPalabra.generarPalabra(); // palabra elegida de un fichero.
            } catch (GenerarPalabraException ex) {
                System.out.println("Error al cargar la palabra del fichero");
            }
        }

        ahorcado = new Ahorcado(palabra);

        etiquetaPalabraOculta.setText(ahorcado.mostrarPalabraOculta());
        etiquetaLetrasFalladas.setText(ahorcado.getStringErrores());

        btnProbar.setEnabled(true);
        campoLetra.setEnabled(true);

    }//GEN-LAST:event_botonNovaPartidaActionPerformed

    /**
     * Simula el juego del ahorcado introduciendo letras mediante el boton
     * "probar".
     *
     * @param evt
     */
    private void btnProbarActionPerformed(java.awt.event.ActionEvent evt) {
        comprobarValores(etiquetaImagen2);
    }//GEN-LAST:event_botonProbarActionPerformed

    private void comprobarValores(JLabel etiquetaImagen2) {
        if (campoLetra.getText().isEmpty() || !campoLetra.getText().toUpperCase().matches("[A-Z√Å√â√ç√ì√ö√ú√ë\\s]*")) {
            JOptionPane.showMessageDialog(this, "Escribiste un caracter no v√°lido.", "Erro", JOptionPane.WARNING_MESSAGE);
        } else {
            ahorcado.comprobarCaracter(campoLetra.getText().charAt(0));
            etiquetaPalabraOculta.setText(ahorcado.mostrarPalabraOculta());
            etiquetaLetrasFalladas.setText(ahorcado.getStringErrores());

            switch (ahorcado.getERRORES().size()) {
                case 0:
                    etiquetaImagen0.setVisible(true);
                    break;
                case 1:
                    etiquetaImagen1.setVisible(true);
                    break;
                case 2:
                    etiquetaImagen2.setVisible(true);
                    break;
                case 3:
                    etiquetaImagen3.setVisible(true);
                    break;
                case 4:
                    etiquetaImagen4.setVisible(true);
                    break;
                case 5:
                    etiquetaImagen5.setVisible(true);
                    break;
                case 6:
                    etiquetaImagen6.setVisible(true);
                    break;
                default:
                    break;
            }

            campoLetra.setText(null);
            if (campoLetra.isVisible()) {
                campoLetra.requestFocus();
            }

            if (ahorcado.maxErroresSuperado()) {
                etiquetaImagen2.setVisible(true);
                JOptionPane.showMessageDialog(this, "Fin del juego, quedaste ahorcado. "
                        + "La palabra era: " + ahorcado.mostrarPalabraCompleta() + ".", "Game Over", JOptionPane.INFORMATION_MESSAGE);
                btnProbar.setEnabled(false);
                campoLetra.setEnabled(false);
            } else if (!ahorcado.maxErroresSuperado() && ahorcado.finDelJuego()) {
                JOptionPane.showMessageDialog(this, "Adivinaste a palabra! "
                        + "La palabra era: " + ahorcado.mostrarPalabraCompleta() + ".", "Victoria!", JOptionPane.INFORMATION_MESSAGE);
                btnProbar.setEnabled(false);
                campoLetra.setEnabled(false);
            }
        }
    }

    /**
     * Simula el juego del ahorcado introduciendo letras mediante la tecla
     * enter.
     *
     * @param evt
     */
    private void campoLetraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoLetraKeyPressed
        if (evt.VK_ENTER == evt.getKeyCode()) {

            comprobarValores(etiquetaImagen6);
        }
    }//GEN-LAST:event_campoLetraKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNuevaPartida;
    private javax.swing.JButton btnProbar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JTextField campoLetra;
    private JLabel etiqueta1;
    private JLabel etiqueta2;
    private JLabel etiqueta5;
    private JLabel etiquetaImagen0;
    private JLabel etiquetaImagen1;
    private JLabel etiquetaImagen2;
    private JLabel etiquetaImagen3;
    private JLabel etiquetaImagen4;
    private JLabel etiquetaImagen5;
    private JLabel etiquetaImagen6;
    private JLabel etiquetaLetrasFalladas;
    private static JLabel etiquetaPalabraOculta;
    private JLabel etiquetaTitulo;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelImagen;
    private javax.swing.JPanel panelJuego;
    private javax.swing.JPanel panelTitulo;
    // End of variables declaration//GEN-END:variables
}
